<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>physics_joint_revolute_create(id,obj_sword,obj_sword.x,obj_sword.y,0,0,0,0,0,false,false);
jumped = false;
mousex = distance_to_point(mouse_x,y)
device_mouse_dbclick_enable(false);
mousey = distance_to_point(x,mouse_y)
cp = false
cauldron = 0
instance_create(x,y,obj_camera)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera Delay Trigger
with obj_camera
{
    cam_delay = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_level_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.level &lt;= obj_save.UnlockedLevel
{
    switch other.level
    {
        case 1:
        room = rm_1;
        break;
        
        case 2:
        room = rm_2;
        break;
        
        case 3:
        room = rm_3;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stop moving</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_sword">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(10)
{
    instance_create(x,y,obj_dead_player);
}



if cp = true{
phy_position_x = cauldron.phy_position_x;
phy_position_y = cauldron.phy_position_y;
}
with obj_camera
{
    cam_delay = true
    shake = true
    shake_value = 15
}
alarm[0] = room_speed

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spear">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(10)
{
    instance_create(x,y,obj_dead_player);
}

if cp = true{
phy_position_x = cauldron.phy_position_x;
phy_position_y = cauldron.phy_position_y;
}
with obj_camera
{
    cam_delay = true
    shake = true
    shake_value = 15
}
alarm[0] = room_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_juggerdane">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_juggerdane.sprite_index = spr_juggerdane_attack{
    repeat(10)
    {
        instance_create(x,y,obj_dead_player);
    }



    if cp = true
    {
        phy_position_x = cauldron.phy_position_x;
        phy_position_y = cauldron.phy_position_y;
    }

}
with obj_camera
{
    cam_delay = true
    shake = true
        shake_value = 15
}
alarm[0] = room_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_floor">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stop moving</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_level_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.level &lt;= obj_save.UnlockedLevel
{
    switch other.level
    {
        case 1:
        room = rm_1;
        break;
        
        case 2:
        room = rm_2;
        break;
        
        case 3:
        room = rm_3;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_cauldron">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cp = true
//image_index += 1
cauldron = other.id
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump
if mouse_x &lt; x-10{
    mousex = -distance_to_point(mouse_x,y)*1.5
}
else if mouse_x &gt; x+10{
    mousex = distance_to_point(mouse_x,y)*1.5
}

else{
    mousex = x
}

if mouse_y &lt; y{
    mousey = distance_to_point(x,mouse_y)*2
}
else if mouse_y &gt; y{
    mousey = -distance_to_point(x,mouse_y)*2
}

else{
    mousey = y
}

if (place_meeting(x,y+1, obj_floor)){
    jumped = false;
}
if (place_meeting(x,y+1,obj_floor) &amp;&amp; jumped = false){

    physics_apply_impulse(x,y,clamp(mousex,-200,200),clamp(-mousey,-sign(mousey)*200,-sign(mousey)*202));
    jumped = true
}


if (!place_meeting(x,y+1,obj_floor) &amp;&amp; jumped = true){

    physics_apply_impulse(x,y,clamp(mousex,-200,200),clamp(-mousey,-sign(mousey)*200,-sign(mousey)*202));
    //physics_apply_impulse(x,y,clamp(mousex,-200,200),clamp(-mousey,-200,200));
    jumped = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_sword.phy_rotation = point_direction(x, -y, mouse_x, -mouse_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if cp = true{
phy_position_x = cauldron.phy_position_x;
phy_position_y = cauldron.phy_position_y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();


//draw_text_colour(x+32,y-32,string(jumped),c_red,c_red,c_red,c_red,1);
//draw_text_colour(x+32,y-16,string(mousey),c_red,c_red,c_red,c_red,1);
//draw_text_colour(x+32,y-8,string(mousex),c_red,c_red,c_red,c_red,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>1.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>5</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.800000011920929</PhysicsObjectFriction>
  <PhysicsObjectAwake>0</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,4</point>
    <point>24,4</point>
    <point>32,30</point>
    <point>0,30</point>
  </PhysicsShapePoints>
</object>
